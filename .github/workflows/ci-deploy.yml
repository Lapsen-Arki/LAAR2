name: Deploy to Azure Container Registry

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_REGISTRY }}
          username: ${{ secrets.AZR_USERNAME_ID }}
          password: ${{ secrets.AZR_PASSWORD }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push backend image
        run: |
          docker buildx create
          docker buildx build --platform linux/amd64 -t ${{ secrets.ACR_REGISTRY }}/laar-backend:latest --push ./backend

      - name: Build and Push frontend image
        env:
          VITE_API_BASE_URL: ${{ secrets.API_BASE_URL }}
          VITE_API_KEY: ${{ secrets.VITE_API_KEY }}
          VITE_APP_ID: ${{ secrets.VITE_APP_ID }}
          VITE_AUTH_DOMAIN: ${{ secrets.VITE_AUTH_DOMAIN }}
          VITE_MESSAGING_SENDER_ID: ${{ secrets.VITE_MESSAGING_SENDER_ID }}
          VITE_PROJECT_ID: ${{ secrets.VITE_PROJECT_ID }}
          VITE_STORAGE_BUCKET: ${{ secrets.VITE_STORAGE_BUCKET }}
          VITE_STRIPE_PUBLIC_KEY: ${{ secrets.VITE_STRIPE_PUBLIC_KEY }}
        run: |
          echo "VITE_API_BASE_URL=${VITE_API_BASE_URL}" > frontend/.env
          echo "VITE_API_KEY=${VITE_API_KEY}" >> frontend/.env
          echo "VITE_APP_ID=${VITE_APP_ID}" >> frontend/.env
          echo "VITE_AUTH_DOMAIN=${VITE_AUTH_DOMAIN}" >> frontend/.env
          echo "VITE_MESSAGING_SENDER_ID=${VITE_MESSAGING_SENDER_ID}" >> frontend/.env
          echo "VITE_PROJECT_ID=${VITE_PROJECT_ID}" >> frontend/.env
          echo "VITE_STORAGE_BUCKET=${VITE_STORAGE_BUCKET}" >> frontend/.env
          echo "VITE_STRIPE_PUBLIC_KEY=${VITE_STRIPE_PUBLIC_KEY}" >> frontend/.env

          docker buildx create
          docker buildx build --platform linux/amd64 -t ${{ secrets.ACR_REGISTRY }}/laar-frontend:latest --build-arg PORT=80 --push ./frontend
