name: CI-DEPLOY

on:
  push:
    branches:
      - main
      - deployment-test

jobs:
  build-push-deploy:
    runs-on: [self-hosted, deploy]
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        run: |
          if ! docker buildx version &> /dev/null; then
            echo "Docker Buildx not found. Installing..."
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
            docker build --platform=local -o . git://github.com/docker/buildx
            mkdir -p ~/.docker/cli-plugins
            mv buildx ~/.docker/cli-plugins/docker-buildx
          fi
          docker buildx version
        shell: bash

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_REGISTRY }}
          username: ${{ secrets.AZR_USERNAME_ID }}
          password: ${{ secrets.AZR_PASSWORD }}

      - name: Build and Push backend image
        run: |
          docker buildx create
          docker buildx build --platform linux/amd64 -t your-registry-name.azurecr.io/laar-backend:latest ./backend
          docker push ${{ secrets.ACR_REGISTRY }}/laar-backend:latest

      - name: Build and Push frontend image
        run: |
          docker buildx create
          docker buildx build --platform linux/amd64 -t your-registry-name.azurecr.io/laar-frontend:latest --build-arg PORT=80 ./frontend
          docker push ${{ secrets.ACR_REGISTRY }}/laar-frontend:latest

      - name: Deploy to Azure Container Registry
        run: |
          az acr task create \
            --registry ${{ secrets.ACR_REGISTRY }} \
            --name laar-backend-deploy \
            --file ./backend/Dockerfile \
            --context ./backend \
            --image ${{ secrets.ACR_REGISTRY }}/laar-backend:latest \
            --arg FIREBASE_KEY_JSON=${{ secrets.FIREBASE_KEY_JSON }}

          az acr task create \
            --registry ${{ secrets.ACR_REGISTRY }} \
            --name laar-frontend-deploy \
            --file ./frontend/Dockerfile \
            --context ./frontend \
            --image ${{ secrets.ACR_REGISTRY }}/laar-frontend:latest \
            --arg PORT=80
